//////////////////////////////
// What is a tree
//////////////////////////////

Applications:
- Organization charts
- File systems
- Programming Environments

Every Node except a root node has a unique parent

Empty structure is an empty tree

Non-empty tree consists of a root and its children, where these children are also trees

//////////////////////////////
// Tree Terminology
//////////////////////////////

Root: unique node without a parent
Internal node: node with at least 1 child (is also including root)
External (leaf) node: node without children
Ancestors of a node: parent, grandparent, great-grandparent, etc.
Descendants of a node: child, granchild, great-grandchild, etc.
Level of a node (depth) 
    By default it is 1 (other documents said 0): level of the root
    If a father has level i then its children has level i + 1

Height of a tree
    Maximum level in a tree
    A single node is a tree of height 1
    The height of an empty tree is 0

Height of a node p
    Is the height of the sub-tree with root p


Degree (order)
    the number of conncetions that it has to other node in the network

Path
    from a root through a unique sequences of edges (arcs)
    Number of arces in a pth is called the length of the path
Edges and Paths 

//////////////////////////////
// What is an ordered tree
//////////////////////////////

An ordered tree
- a meaningful linear order among the children of each node
- cay da duoc sap xep

//////////////////////////////
// The tree abstract data type
//////////////////////////////

A tree ADT
- using the concept of a position as an abstraction for a node of a tree
- position satisfy parent-child relationships



//////////////////////////////
// The tree abstract data type
//////////////////////////////



//////////////////////////////
// Tree Traversals
//////////////////////////////

Inorder: Left, Root, Right
Preorder: Root, Left, Right (Ascending)
Postorder: Left, Right, Root 